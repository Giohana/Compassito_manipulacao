import 'package:flutter/material.dart';

class Inputar extends StatelessWidget {
  final TextEditingController _controladorItem = TextEditingController();
  final TextEditingController _controladorTipoItem = TextEditingController();
  final TextEditingController _controladorQuantidadeReservado =
      TextEditingController();
  final TextEditingController _controladorQuantidadeDisponivel =
      TextEditingController();
  final TextEditingController _controladorValor = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
          appBar: AppBar(
            title: Text('Manipulação'),
          ),
          body: ListView(
            children: <Widget>[
              Input(
                rotulo: 'Nome do produto',
                ctrl: _controladorItem,
              ),
              Input(
                rotulo: 'Tipo do Item',
                ctrl: _controladorTipoItem,
              ),
              Input(
                rotulo: 'Quantidade Reservada',
                ctrl: _controladorQuantidadeReservado,
              ),
              Input(
                rotulo: 'Quantidade Disponível',
                ctrl: _controladorQuantidadeDisponivel,
              ),
              Input(
                rotulo: 'Preço',
                ctrl: _controladorValor,
              ),
              RaisedButton(
                  child: Text('Confirmar'),
                  onPressed: () {
                    debugPrint('pressionei o botão confirmar');

                    final String item = _controladorItem.text;
                    final String tipoItem = _controladorTipoItem.text;
                    final int quantidadeReservado =
                        int.tryParse(_controladorQuantidadeReservado.text);
                    final int quantidadeDisponivel =
                        int.tryParse(_controladorQuantidadeDisponivel.text);
                    final int valor = int.tryParse(_controladorValor.text);

                    AutoGenerated(
                      id: 0,
                      item: item,
                      tipoItem: tipoItem,
                      quantidadeReservado: quantidadeReservado,
                      quantidadeDisponivel: quantidadeDisponivel,
                      valor: valor,
                      ativo: true,
                    );
                  }),
            ],
          )),
    );
  }
}

class Input extends StatelessWidget {
  final TextEditingController ctrl;
  final String rotulo;

  Input({this.rotulo, this.ctrl});

  @override
  Widget build(BuildContext context) {
    return Padding(
        padding: const EdgeInsets.all(10.0),
        child: TextField(
          controller: ctrl,
          style: TextStyle(fontSize: 20.0),
          decoration: InputDecoration(
            labelText: rotulo,
          ),
        ));
  }
}

class AutoGenerated {
  int id;
  String item;
  String tipoItem;
  int quantidadeReservado;
  int quantidadeDisponivel;
  int valor;
  bool ativo;

  AutoGenerated({
    this.id,
    this.item,
    this.tipoItem,
    this.quantidadeReservado,
    this.quantidadeDisponivel,
    this.valor,
    this.ativo,
  });

  AutoGenerated.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    item = json['item'];
    tipoItem = json['tipoItem'];
    quantidadeReservado = json['quantidadeReservado'];
    quantidadeDisponivel = json['quantidadeDisponivel'];
    valor = json['valor'];
    ativo = json['ativo'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['item'] = this.item;
    data['tipoItem'] = this.tipoItem;
    data['quantidadeReservado'] = this.quantidadeReservado;
    data['quantidadeDisponivel'] = this.quantidadeDisponivel;
    data['valor'] = this.valor;
    data['ativo'] = this.ativo;
    return data;
  }

  @override
  String toString() {
    return 'IncluirConfirmar {id: $id, item: $item, tipoItem: $tipoItem, quantidadeReservado: $quantidadeReservado, quantidadeDisponivel: $quantidadeDisponivel, valor: $valor, ativo $ativo}';
  }
}
