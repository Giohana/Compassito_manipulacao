import 'dart:convert';
import 'package:http/http.dart';
import 'package:http_interceptor/http_interceptor.dart';
import 'package:manipulacao/models/autoGenerate.dart';

class LoggingInterceptor implements InterceptorContract {
  @override
  Future<RequestData> interceptRequest({RequestData data}) async {
    print('Request');
    print('url: ${data.baseUrl}');
    print('headers: ${data.headers}');
    print('body: ${data.body}');
    return data;
  }

  @override
  Future<ResponseData> interceptResponse({ResponseData data}) async {
    print('Response');
    print('status code: ${data.statusCode}');
    print('headers: ${data.headers}');
    print('body: ${data.body}');
    return data;
  }
}

//192.168.0.7
Future<List<AutoGenerated>> findAll() async {
  final Client client = HttpClientWithInterceptor.build(
    interceptors: [LoggingInterceptor()],
  );
  final Response response = await client.get('http://192.168.0.9:8091/estoque');
  final decodedJson = jsonDecode(response.body);
  final List<AutoGenerated> gerador = List();

  for (Map<String, dynamic> element in decodedJson) {
    final AutoGenerated generate = AutoGenerated(
      item: element['item'],
      tipoItem: element['tipoItem'],
      quantidadeReservado: element['quantidadeReservado'],
      quantidadeDisponivel: element['quantidadeDisponivel'],
      valor: element['valor'],
      ativo: element['ativo'],
    );
    gerador.add(generate);
  }

  return gerador;
}
